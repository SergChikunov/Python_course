"""
В фермерском хозяйстве в Карелии выращивают чернику. Черника растет на круглой грядке, и кусты черники высажены по
окружности грядки. Каждый куст черники имеет урожайность, которая соответствует количеству ягод на этом кусте.

Урожайность черничных кустов представлена в виде списка arr, где arr[i] - это урожайность (количество ягод) i-го куста.

В фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и
нескольких собирающих модулей. Каждый собирающий модуль может собрать ягоды с одного куста и с двух соседних кустов.
Собирающий модуль находится перед определенным кустом, и он может выбирать, с какого куста начать сбор ягод.

Ваша задача - написать программу, которая определит максимальное число ягод, которое может собрать один собирающий
модуль за один заход, находясь перед некоторым кустом грядки.

Входные данные:
На вход программе подается список arr, где arr[i] (1 ≤ arr[i] ≤ 1000) - урожайность i-го куста черники.
Размер списка не превышает 1000 элементов.

Выходные данные:
Программа должна вывести одно целое число - максимальное количество ягод, которое может собрать собирающий модуль,
находясь перед некоторым кустом грядки.

Пример использования На входе:
arr = [5, 8, 6, 4, 9, 2, 7, 3]
На выходе:
19
"""
import random

my_num = int(input('Укажите количество элементов первого списка: '))
my_list = [random.randint(0, 30) for i in range(my_num)]  # использование comprehension list
print('Список урожайности кустов на грядке: ')
print(my_list)
max_val = 0  # переменная для хранения максимального значения
for i in range(0, len(my_list) - 1):
    temp_list = (my_list[i:i + 3])  # берем по 3 элемента списка на каждый проход цикла исходя из условия
    if len(temp_list) > 2:  # если во временном списке более 2 элементов, то суммируем их, это кол-во собранных ягод
        summa = sum(my_list[i:i + 3])
        if summa > max_val:  # если сумма превышает максимальное значение, то она становится макс значением
            max_val = summa
print(f"За один заход собирающий модуль способен собрать максимально {max_val} ягод.")
