"""
Рекурсия. Сортировка слиянием
"""


def merge_sort(nums):
    if len(nums) > 1:
        mid = len(nums) // 2  # разбивка списка на 2 половины
        left = nums[:mid]  # половина списка левее от его середины
        print('left =', left)  # этот оператор для понимания кода
        right = nums[mid:]  # половина списка правее от его середины
        print('right =', right)  # этот оператор для понимания кода
        merge_sort(left)  # рекурсивный вызов для левой части
        merge_sort(right)  # рекурсивный вызов для правой части
        i = j = k = 0
        """
        нужно обратить внимание на условие цикла - содержит составное условие if, которое содержит определение длины
        правой и левой частей списка. Между тем, две половины списка могут быть не равны по длине, как в данном 
        случае, длина левой части 3 элемента, длина правой части - 4 элемента, поэтому функция заканчивается двумя
        циклами while
        """
        while i < len(left) and j < len(right):
            if left[i] < right[j]:
                nums[k] = left[i]  # у нас сформировано 2 половины от исходного списка, поэтому присваиваем значение исходному не боясь потерять его
                i += 1
            else:
                nums[k] = right[j]  # у нас сформировано 2 половины от исходного списка, поэтому присваиваем значение исходному не боясь потерять его
                j += 1
            k += 1
        print('Промежуточный список nums: ', nums)  # этот оператор для понимания кода
        """
        если после окончания предыдущего while i меньше чем его длина значит в нем еще остались необработанные элементы
        проверяем это условие, если оно выполняется то добавляем в список необработанные элементы из левой части 
        """
        while i < len(left):
            nums[k] = left[i]
            i += 1
            k += 1
        """
        если после окончания предыдущего while i меньше чем его длина значит в нем еще остались необработанные элементы
        проверяем это условие, если оно выполняется то добавляем в список необработанные элементы из правой части 
        """
        while j < len(right):
            nums[k] = right[j]
            j += 1
            k += 1


nums = [38, 27, 43, 3, 9, 82, 10]
print('Исходный список: ', nums)
merge_sort(nums)
print('Отсортированный список: ', nums)
