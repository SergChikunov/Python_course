"""
Задача. Решение в группах. Создать телефонный справочник с возможностью импорта и экспорта данных в
формате .txt. Фамилия, имя, отчество, номер телефона - данные, которые должны находиться
в файле.
1. Программа должна выводить данные
2. Программа должна сохранять данные в текстовом файле
3. Пользователь может ввести одну из характеристик для поиска определенной записи(Например имя или фамилию
человека)
4. Использование функций. Ваша программа не должна быть линейной

"""
import csv


def create_file():
    fields = ['Фамилия', 'Имя', 'Отчество', 'Телефон']  # имена полей
    rows_in_file = create_recs()  # получаем список со "строками" из функции create_recs()
    filename = "phonebook.csv"  # имя файла

    with open(filename, 'w', encoding='utf-8') as csvfile:  # режим 'w' - запись файла с заменой информации
        writer = csv.writer(csvfile)  # создание объекта Writer для записи в файл
        writer.writerow(fields)  # запись полей в файл
        writer.writerows(rows_in_file)  # запись данных в строки
        csvfile.close()  # закрытие файловых операций


def add_rec_to_book():
    rows_in_file = create_recs()
    filename = "phonebook.csv"  # имя файла

    with open(filename, 'a', encoding='utf-8') as csvfile:  # режим 'a' - добавление информации в файл
        writer = csv.writer(csvfile)  # создание объекта Writer для записи в файл
        writer.writerows(rows_in_file)  # запись данных в строки
        csvfile.close()  # закрытие файловых операций


def read_phonebook():
    with open("phonebook.csv", encoding='utf-8') as csvfile:
        file_reader = csv.reader(csvfile)  # Создаем объект csv.reader
        count = 0  # Счетчик для подсчета количества строк и вывода заголовков столбцов
        for row in file_reader:  # Считывание данных из CSV файла
            if count == 0:  # Вывод строки, содержащей заголовки для столбцов
                print(', '.join(row))
            else:  # Вывод строк
                print(', '.join(row))
            count += 1
        csvfile.close()  # закрытие файловых операций


def create_recs():  # создание списка, из которого данные будут внесены в csv файл
    res_list = []  # это результиоующий список, который вернет функция, содержит n-списков полученных в цикле while
    flag = True
    while flag:  # в цикле запрашиваем информацию у пользователя
        my_list = [input('Введите фамилию: '),
                   input('Введите имя: '),
                   input('Введите отчество: '),
                   input('Введите номер телефона: ')]  # список необходим для правильного формирования одной строки!!!
        res_list.append(my_list[:])  # добавляем my_list в результирующий список в качестве отдельного элемента
        # срез по всему списку - это своего рода копия от исходного, но создается другой объект
        # если этого не сделать, то в res_list будет попадать только последний список в кол-ве n-итераций while
        # как альтернатива - можно использовать метод my_list.copy(), результат будет тот же
        what_do = input('Завершение ввода - "Y", затем "Enter", продолжение ввода - просто "Enter"...')
        if what_do in {'Y', 'y', 'L', 'l', 'Н', 'н', 'Д', 'д'}:
            flag = False
    # print(res_list)  # использовал в целях отладки
    return res_list


print('=' * 20, 'Телефонная книга', '=' * 20)
choice = int(input('1 - Чтение информации; 2 - Добавление информации; 3 - Новая книга. Ваш выбор: '))
match choice:
    case 1:
        read_phonebook()
    case 2:
        add_rec_to_book()
    case 3:
        choice01 = input('Этот выбор уничтожит все ранее введенные данные! Продолжение - "д"...')
        if choice01.lower() == 'д':
            create_file()
        else:
            print('Данные не будут модифицированы. Программа завершает работу!')
    case 4:
        pass
    case 5:
        pass
    case 6:
        pass
    case 7:
        pass
