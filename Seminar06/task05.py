"""
Практика по использованию генераторов и списковых включений
Списковое включение (List comprehension) - подход к созданию различных наборов значений элементов
"""


def func1(n):
    res = [el for el in range(1, n)]  # список наполняем используя List comprehension
    return res


print(func1(50))


def func2(n):
    for el in range(n):
        yield el  # возвращает объект генератор, который можно проитерировать


print()
print('=' * 50)
print('Соддержимое объекта "генератор" проитерированное в цикле for:')
for el in func2(25):
    print(el, end=' ')


print()
print('=' * 50)
print()
# объект "генератор" - одноразовый(!!!), его требуется создавать при каждом обращении к нему
# это свойство позволяет более рационально использовать ресурсы ОЗУ, т.к. объект создается только при его вызове


# print()
# for el in func2(5):
#     print(el, end=' ')

print()
print((el for el in range(5)))  # несмотря на круглые скобки будет создан не кортеж, а генератор

print({el: el * 2 for el in range(11)})  # генерация словаря
